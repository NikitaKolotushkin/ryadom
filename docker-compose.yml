version: '3.8'

services:
  edge_router:
    container_name: edge-router
    build: 
      context: ./ryadom_edge-router
      secrets:
        - github_token
    networks:
      - ryadom-network
    ports:
      - "8080:8080"
    env_file:
      - app.env
    volumes:
      - ./config:/app/app/config

  events:
    container_name: events
    build:
      context: ./ryadom_events
      secrets:
        - github_token
    networks:
      - ryadom-network
    ports:
      - "8083:8083"
    env_file:
      - app.env
    volumes:
      - ./config:/app/app/config
    depends_on:
      postgres_events:
        condition: service_healthy

  postgres_events:
    image: postgres:latest
    container_name: postgres-events
    networks:
      - ryadom-network
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: events_user
      POSTGRES_PASSWORD: events_password
      POSTGRES_DB: events_db
    volumes:
      - postgres_events_data:/var/lib/postgresql/data
      - ./ryadom_events/db/init-events-db.sql:/docker-entrypoint-initdb.d/init-events-db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "events_user"]
      interval: 5s
      timeout: 5s
      retries: 5

  users:
    container_name: users
    build:
      context: ./ryadom_users
      secrets:
        - github_token
    networks:
      - ryadom-network
    ports:
      - "8082:8082"
    env_file:
      - app.env
    volumes:
      - ./config:/app/app/config
    depends_on:
      postgres_users:
        condition: service_healthy

  postgres_users:
    image: postgres:latest
    container_name: postgres-users
    networks:
      - ryadom-network
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: users_user
      POSTGRES_PASSWORD: users_password
      POSTGRES_DB: users_db
    volumes:
      - postgres_users_data:/var/lib/postgresql/data
      - ./ryadom_users/db/init-users-db.sql:/docker-entrypoint-initdb.d/init-users-db.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "users_user"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  front_end:
    container_name: front-end
    build:
      context: ./ryadom_front-end
    networks:
      - ryadom-network
    ports:
      - "8081:8081"
    env_file:
      - app.env
      - secrets.env
    volumes:
      - ./config:/app/app/config

  maps:
    container_name: maps
    build:
      context: ./ryadom_maps
      secrets:
        - github_token
    networks:
      - ryadom-network
    ports:
      - "8084:8084"
    env_file:
      - app.env
      - secrets.env
    volumes:
      - ./config:/app/app/config

  nginx:
    container_name: nginx
    build:
      context: ./ryadom_nginx
    networks:
      - ryadom-network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./ryadom_nginx/conf.d:/etc/nginx/conf.d
      - ./ryadom_nginx/ssl:/etc/nginx/ssl
    depends_on:
      - front_end


volumes:
  postgres_events_data:
  postgres_users_data:

networks:
  ryadom-network:
    name: ryadom_network

secrets:
  github_token:
    file: .github_token
